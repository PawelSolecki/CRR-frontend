// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};

export type UserCv = {
    personalInfo: {
        firstName: string;
        lastName: string;
        email?: string;
        phone?: string;
        role?: string;
        summary?: string;
        linkedIn?: string;
        github?: string;
        website?: string;
        other?: string;
    };
    skills?: Array<string>;
    experience?: Array<{
        position?: string;
        company?: string;
        url?: string;
        location?: string;
        startDate?: string;
        endDate?: string;
        summaries?: Array<{
            text?: string;
            technologies?: Array<string>;
        }>;
    }>;
    education?: Array<{
        school?: string;
        degree?: string;
        fieldOfStudy?: string;
        startDate?: string;
        endDate?: string;
    }>;
    languages?: Array<{
        language?: string;
        level?: 'A1' | 'A2' | 'B1' | 'B2' | 'C1' | 'C2';
    }>;
    certifications?: Array<{
        name?: string;
        issuer?: string;
        date?: string;
    }>;
    projects?: Array<{
        name?: string;
        url?: string;
        summaries?: Array<{
            text?: string;
            technologies?: Array<string>;
        }>;
    }>;
};

export type JobOffer = {
    description?: string;
    technologies?: Array<string>;
    requirements?: Array<string>;
    responsibilities?: Array<string>;
};

export type SkillResult = {
    hardSkills?: Array<{
        name: string;
        score: number;
    }>;
    softSkills?: Array<{
        name: string;
        score: number;
    }>;
    tools?: Array<{
        name: string;
        score: number;
    }>;
};

export type SkillItem = {
    name: string;
    score: number;
};

export type _Error = {
    detail: string;
};

export type GetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type GetResponses = {
    /**
     * Service information
     */
    200: {
        message?: string;
        version?: string;
    };
};

export type GetResponse = GetResponses[keyof GetResponses];

export type GetHealthData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type GetHealthResponses = {
    /**
     * Service status
     */
    200: {
        status?: string;
    };
};

export type GetHealthResponse = GetHealthResponses[keyof GetHealthResponses];

export type PostApiV1CvAnalyzeCvData = {
    body: {
        personalInfo: {
            firstName: string;
            lastName: string;
            email?: string;
            phone?: string;
            role?: string;
            summary?: string;
            linkedIn?: string;
            github?: string;
            website?: string;
            other?: string;
        };
        skills?: Array<string>;
        experience?: Array<{
            position?: string;
            company?: string;
            url?: string;
            location?: string;
            startDate?: string;
            endDate?: string;
            summaries?: Array<{
                text?: string;
                technologies?: Array<string>;
            }>;
        }>;
        education?: Array<{
            school?: string;
            degree?: string;
            fieldOfStudy?: string;
            startDate?: string;
            endDate?: string;
        }>;
        languages?: Array<{
            language?: string;
            level?: 'A1' | 'A2' | 'B1' | 'B2' | 'C1' | 'C2';
        }>;
        certifications?: Array<{
            name?: string;
            issuer?: string;
            date?: string;
        }>;
        projects?: Array<{
            name?: string;
            url?: string;
            summaries?: Array<{
                text?: string;
                technologies?: Array<string>;
            }>;
        }>;
    };
    path?: never;
    query?: {
        alpha?: number;
        top_k?: number;
        min_score?: number;
    };
    url: '/api/v1/cv/analyze-cv';
};

export type PostApiV1CvAnalyzeCvErrors = {
    /**
     * Invalid input
     */
    400: {
        detail: string;
    };
    /**
     * Server error
     */
    500: {
        detail: string;
    };
};

export type PostApiV1CvAnalyzeCvError = PostApiV1CvAnalyzeCvErrors[keyof PostApiV1CvAnalyzeCvErrors];

export type PostApiV1CvAnalyzeCvResponses = {
    /**
     * Successfully analyzed CV
     */
    200: {
        personalInfo: {
            firstName: string;
            lastName: string;
            email?: string;
            phone?: string;
            role?: string;
            summary?: string;
            linkedIn?: string;
            github?: string;
            website?: string;
            other?: string;
        };
        skills?: Array<string>;
        experience?: Array<{
            position?: string;
            company?: string;
            url?: string;
            location?: string;
            startDate?: string;
            endDate?: string;
            summaries?: Array<{
                text?: string;
                technologies?: Array<string>;
            }>;
        }>;
        education?: Array<{
            school?: string;
            degree?: string;
            fieldOfStudy?: string;
            startDate?: string;
            endDate?: string;
        }>;
        languages?: Array<{
            language?: string;
            level?: 'A1' | 'A2' | 'B1' | 'B2' | 'C1' | 'C2';
        }>;
        certifications?: Array<{
            name?: string;
            issuer?: string;
            date?: string;
        }>;
        projects?: Array<{
            name?: string;
            url?: string;
            summaries?: Array<{
                text?: string;
                technologies?: Array<string>;
            }>;
        }>;
    };
};

export type PostApiV1CvAnalyzeCvResponse = PostApiV1CvAnalyzeCvResponses[keyof PostApiV1CvAnalyzeCvResponses];

export type PostApiV1CvGenerateBioData = {
    body: {
        user_cv: {
            personalInfo: {
                firstName: string;
                lastName: string;
                email?: string;
                phone?: string;
                role?: string;
                summary?: string;
                linkedIn?: string;
                github?: string;
                website?: string;
                other?: string;
            };
            skills?: Array<string>;
            experience?: Array<{
                position?: string;
                company?: string;
                url?: string;
                location?: string;
                startDate?: string;
                endDate?: string;
                summaries?: Array<{
                    text?: string;
                    technologies?: Array<string>;
                }>;
            }>;
            education?: Array<{
                school?: string;
                degree?: string;
                fieldOfStudy?: string;
                startDate?: string;
                endDate?: string;
            }>;
            languages?: Array<{
                language?: string;
                level?: 'A1' | 'A2' | 'B1' | 'B2' | 'C1' | 'C2';
            }>;
            certifications?: Array<{
                name?: string;
                issuer?: string;
                date?: string;
            }>;
            projects?: Array<{
                name?: string;
                url?: string;
                summaries?: Array<{
                    text?: string;
                    technologies?: Array<string>;
                }>;
            }>;
        };
        skill_result: {
            hardSkills?: Array<{
                name: string;
                score: number;
            }>;
            softSkills?: Array<{
                name: string;
                score: number;
            }>;
            tools?: Array<{
                name: string;
                score: number;
            }>;
        };
        job_offer: {
            description?: string;
            technologies?: Array<string>;
            requirements?: Array<string>;
            responsibilities?: Array<string>;
        };
    };
    path?: never;
    query?: never;
    url: '/api/v1/cv/generate-bio';
};

export type PostApiV1CvGenerateBioErrors = {
    /**
     * Invalid input
     */
    400: {
        detail: string;
    };
    /**
     * Server error
     */
    500: {
        detail: string;
    };
};

export type PostApiV1CvGenerateBioError = PostApiV1CvGenerateBioErrors[keyof PostApiV1CvGenerateBioErrors];

export type PostApiV1CvGenerateBioResponses = {
    /**
     * Successfully generated bio
     */
    200: {
        bio?: string;
    };
};

export type PostApiV1CvGenerateBioResponse = PostApiV1CvGenerateBioResponses[keyof PostApiV1CvGenerateBioResponses];

export type PostApiV1OfferAnalyzeOfferData = {
    body: {
        description?: string;
        technologies?: Array<string>;
        requirements?: Array<string>;
        responsibilities?: Array<string>;
    };
    path?: never;
    query?: {
        /**
         * Maximum number of results per category
         */
        max_results_per_category?: number;
    };
    url: '/api/v1/offer/analyze-offer';
};

export type PostApiV1OfferAnalyzeOfferErrors = {
    /**
     * Invalid input
     */
    400: {
        detail: string;
    };
    /**
     * Server error
     */
    500: {
        detail: string;
    };
};

export type PostApiV1OfferAnalyzeOfferError = PostApiV1OfferAnalyzeOfferErrors[keyof PostApiV1OfferAnalyzeOfferErrors];

export type PostApiV1OfferAnalyzeOfferResponses = {
    /**
     * Successfully analyzed job offer
     */
    200: {
        hardSkills?: Array<{
            name: string;
            score: number;
        }>;
        softSkills?: Array<{
            name: string;
            score: number;
        }>;
        tools?: Array<{
            name: string;
            score: number;
        }>;
    };
};

export type PostApiV1OfferAnalyzeOfferResponse = PostApiV1OfferAnalyzeOfferResponses[keyof PostApiV1OfferAnalyzeOfferResponses];
