// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod';

export const zUserCv = z.object({
    personalInfo: z.object({
        firstName: z.string(),
        lastName: z.string(),
        email: z.optional(z.email()),
        phone: z.optional(z.string()),
        role: z.optional(z.string()),
        summary: z.optional(z.string()),
        linkedIn: z.optional(z.string()),
        github: z.optional(z.string()),
        website: z.optional(z.string()),
        other: z.optional(z.string())
    }),
    skills: z.optional(z.array(z.string())),
    experience: z.optional(z.array(z.object({
        position: z.optional(z.string()),
        company: z.optional(z.string()),
        url: z.optional(z.string()),
        location: z.optional(z.string()),
        startDate: z.optional(z.iso.date()),
        endDate: z.optional(z.iso.date()),
        summaries: z.optional(z.array(z.object({
            text: z.optional(z.string()),
            technologies: z.optional(z.array(z.string()))
        })))
    }))),
    education: z.optional(z.array(z.object({
        school: z.optional(z.string()),
        degree: z.optional(z.string()),
        fieldOfStudy: z.optional(z.string()),
        startDate: z.optional(z.iso.date()),
        endDate: z.optional(z.iso.date())
    }))),
    languages: z.optional(z.array(z.object({
        language: z.optional(z.string()),
        level: z.optional(z.enum([
            'A1',
            'A2',
            'B1',
            'B2',
            'C1',
            'C2'
        ]))
    }))),
    certifications: z.optional(z.array(z.object({
        name: z.optional(z.string()),
        issuer: z.optional(z.string()),
        date: z.optional(z.iso.date())
    }))),
    projects: z.optional(z.array(z.object({
        name: z.optional(z.string()),
        url: z.optional(z.string()),
        summaries: z.optional(z.array(z.object({
            text: z.optional(z.string()),
            technologies: z.optional(z.array(z.string()))
        })))
    })))
});

export const zJobOffer = z.object({
    description: z.optional(z.string()),
    technologies: z.optional(z.array(z.string())),
    requirements: z.optional(z.array(z.string())),
    responsibilities: z.optional(z.array(z.string()))
});

export const zSkillResult = z.object({
    hardSkills: z.optional(z.array(z.object({
        name: z.string(),
        score: z.number()
    }))),
    softSkills: z.optional(z.array(z.object({
        name: z.string(),
        score: z.number()
    }))),
    tools: z.optional(z.array(z.object({
        name: z.string(),
        score: z.number()
    })))
});

export const zSkillItem = z.object({
    name: z.string(),
    score: z.number()
});

export const zError = z.object({
    detail: z.string()
});

export const zGetData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.optional(z.never())
});

/**
 * Service information
 */
export const zGetResponse = z.object({
    message: z.optional(z.string()),
    version: z.optional(z.string())
});

export const zGetHealthData = z.object({
    body: z.optional(z.never()),
    path: z.optional(z.never()),
    query: z.optional(z.never())
});

/**
 * Service status
 */
export const zGetHealthResponse = z.object({
    status: z.optional(z.string())
});

export const zPostApiV1CvAnalyzeCvData = z.object({
    body: z.object({
        personalInfo: z.object({
            firstName: z.string(),
            lastName: z.string(),
            email: z.optional(z.email()),
            phone: z.optional(z.string()),
            role: z.optional(z.string()),
            summary: z.optional(z.string()),
            linkedIn: z.optional(z.string()),
            github: z.optional(z.string()),
            website: z.optional(z.string()),
            other: z.optional(z.string())
        }),
        skills: z.optional(z.array(z.string())),
        experience: z.optional(z.array(z.object({
            position: z.optional(z.string()),
            company: z.optional(z.string()),
            url: z.optional(z.string()),
            location: z.optional(z.string()),
            startDate: z.optional(z.iso.date()),
            endDate: z.optional(z.iso.date()),
            summaries: z.optional(z.array(z.object({
                text: z.optional(z.string()),
                technologies: z.optional(z.array(z.string()))
            })))
        }))),
        education: z.optional(z.array(z.object({
            school: z.optional(z.string()),
            degree: z.optional(z.string()),
            fieldOfStudy: z.optional(z.string()),
            startDate: z.optional(z.iso.date()),
            endDate: z.optional(z.iso.date())
        }))),
        languages: z.optional(z.array(z.object({
            language: z.optional(z.string()),
            level: z.optional(z.enum([
                'A1',
                'A2',
                'B1',
                'B2',
                'C1',
                'C2'
            ]))
        }))),
        certifications: z.optional(z.array(z.object({
            name: z.optional(z.string()),
            issuer: z.optional(z.string()),
            date: z.optional(z.iso.date())
        }))),
        projects: z.optional(z.array(z.object({
            name: z.optional(z.string()),
            url: z.optional(z.string()),
            summaries: z.optional(z.array(z.object({
                text: z.optional(z.string()),
                technologies: z.optional(z.array(z.string()))
            })))
        })))
    }),
    path: z.optional(z.never()),
    query: z.optional(z.object({
        alpha: z.optional(z.number()).default(1),
        top_k: z.optional(z.int()).default(5),
        min_score: z.optional(z.number()).default(0.1)
    }))
});

/**
 * Successfully analyzed CV
 */
export const zPostApiV1CvAnalyzeCvResponse = z.object({
    personalInfo: z.object({
        firstName: z.string(),
        lastName: z.string(),
        email: z.optional(z.email()),
        phone: z.optional(z.string()),
        role: z.optional(z.string()),
        summary: z.optional(z.string()),
        linkedIn: z.optional(z.string()),
        github: z.optional(z.string()),
        website: z.optional(z.string()),
        other: z.optional(z.string())
    }),
    skills: z.optional(z.array(z.string())),
    experience: z.optional(z.array(z.object({
        position: z.optional(z.string()),
        company: z.optional(z.string()),
        url: z.optional(z.string()),
        location: z.optional(z.string()),
        startDate: z.optional(z.iso.date()),
        endDate: z.optional(z.iso.date()),
        summaries: z.optional(z.array(z.object({
            text: z.optional(z.string()),
            technologies: z.optional(z.array(z.string()))
        })))
    }))),
    education: z.optional(z.array(z.object({
        school: z.optional(z.string()),
        degree: z.optional(z.string()),
        fieldOfStudy: z.optional(z.string()),
        startDate: z.optional(z.iso.date()),
        endDate: z.optional(z.iso.date())
    }))),
    languages: z.optional(z.array(z.object({
        language: z.optional(z.string()),
        level: z.optional(z.enum([
            'A1',
            'A2',
            'B1',
            'B2',
            'C1',
            'C2'
        ]))
    }))),
    certifications: z.optional(z.array(z.object({
        name: z.optional(z.string()),
        issuer: z.optional(z.string()),
        date: z.optional(z.iso.date())
    }))),
    projects: z.optional(z.array(z.object({
        name: z.optional(z.string()),
        url: z.optional(z.string()),
        summaries: z.optional(z.array(z.object({
            text: z.optional(z.string()),
            technologies: z.optional(z.array(z.string()))
        })))
    })))
});

export const zPostApiV1CvGenerateBioData = z.object({
    body: z.object({
        user_cv: z.object({
            personalInfo: z.object({
                firstName: z.string(),
                lastName: z.string(),
                email: z.optional(z.email()),
                phone: z.optional(z.string()),
                role: z.optional(z.string()),
                summary: z.optional(z.string()),
                linkedIn: z.optional(z.string()),
                github: z.optional(z.string()),
                website: z.optional(z.string()),
                other: z.optional(z.string())
            }),
            skills: z.optional(z.array(z.string())),
            experience: z.optional(z.array(z.object({
                position: z.optional(z.string()),
                company: z.optional(z.string()),
                url: z.optional(z.string()),
                location: z.optional(z.string()),
                startDate: z.optional(z.iso.date()),
                endDate: z.optional(z.iso.date()),
                summaries: z.optional(z.array(z.object({
                    text: z.optional(z.string()),
                    technologies: z.optional(z.array(z.string()))
                })))
            }))),
            education: z.optional(z.array(z.object({
                school: z.optional(z.string()),
                degree: z.optional(z.string()),
                fieldOfStudy: z.optional(z.string()),
                startDate: z.optional(z.iso.date()),
                endDate: z.optional(z.iso.date())
            }))),
            languages: z.optional(z.array(z.object({
                language: z.optional(z.string()),
                level: z.optional(z.enum([
                    'A1',
                    'A2',
                    'B1',
                    'B2',
                    'C1',
                    'C2'
                ]))
            }))),
            certifications: z.optional(z.array(z.object({
                name: z.optional(z.string()),
                issuer: z.optional(z.string()),
                date: z.optional(z.iso.date())
            }))),
            projects: z.optional(z.array(z.object({
                name: z.optional(z.string()),
                url: z.optional(z.string()),
                summaries: z.optional(z.array(z.object({
                    text: z.optional(z.string()),
                    technologies: z.optional(z.array(z.string()))
                })))
            })))
        }),
        skill_result: z.object({
            hardSkills: z.optional(z.array(z.object({
                name: z.string(),
                score: z.number()
            }))),
            softSkills: z.optional(z.array(z.object({
                name: z.string(),
                score: z.number()
            }))),
            tools: z.optional(z.array(z.object({
                name: z.string(),
                score: z.number()
            })))
        }),
        job_offer: z.object({
            description: z.optional(z.string()),
            technologies: z.optional(z.array(z.string())),
            requirements: z.optional(z.array(z.string())),
            responsibilities: z.optional(z.array(z.string()))
        })
    }),
    path: z.optional(z.never()),
    query: z.optional(z.never())
});

/**
 * Successfully generated bio
 */
export const zPostApiV1CvGenerateBioResponse = z.object({
    bio: z.optional(z.string())
});

export const zPostApiV1OfferAnalyzeOfferData = z.object({
    body: z.object({
        description: z.optional(z.string()),
        technologies: z.optional(z.array(z.string())),
        requirements: z.optional(z.array(z.string())),
        responsibilities: z.optional(z.array(z.string()))
    }),
    path: z.optional(z.never()),
    query: z.optional(z.object({
        max_results_per_category: z.optional(z.int())
    }))
});

/**
 * Successfully analyzed job offer
 */
export const zPostApiV1OfferAnalyzeOfferResponse = z.object({
    hardSkills: z.optional(z.array(z.object({
        name: z.string(),
        score: z.number()
    }))),
    softSkills: z.optional(z.array(z.object({
        name: z.string(),
        score: z.number()
    }))),
    tools: z.optional(z.array(z.object({
        name: z.string(),
        score: z.number()
    })))
});
